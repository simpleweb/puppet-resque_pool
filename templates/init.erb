#!/bin/bash
# puppet-resque_pool     This init script enables something in resque-pool, with
#                        rackup, for <%= @name %>
#
# Authors:               Paul Springett
#

### BEGIN INIT INFO
# Provides:          resque_pool_<%= @name %>
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: <%= @name %> running resque-pool
### END INIT INFO

. /etc/default/resque_pool_<%= @name %>

RETVAL=0

. /lib/lsb/init-functions

case "$1" in
  start)
    log_daemon_msg "Starting resque-pool server" "resque_pool_<%= @name %>"
    start-stop-daemon --start --quiet --oknodo --user "${USER:-root}" --pidfile $PIDFILE --chdir $APPROOT --startas $DAEMON -- $DAEMON_OPTS
    RETVAL=$?
    log_end_msg $RETVAL
    ;;
  reload)
    log_daemon_msg "Reloading config files, logfiles and restarting all resque-pool workers" "resque_pool_<%= @name %>"
    start-stop-daemon --stop --pidfile $PIDFILE --signal HUP
    RETVAL=$?
    log_end_msg $RETVAL
    ;;
  graceful-stop)
    log_daemon_msg "Stopping resque-pool server" "resque_pool_<%= @name %>"
    start-stop-daemon --stop --pidfile $PIDFILE --signal QUIT
    RETVAL=$?
    log_end_msg $RETVAL
    ;;
  quick-stop)
    log_daemon_msg "Stopping resque-pool server" "resque_pool_<%= @name %>"
    start-stop-daemon --stop --pidfile $PIDFILE --signal INT
    RETVAL=$?
    log_end_msg $RETVAL
    ;;
  stop)
    log_daemon_msg "Stopping resque-pool server" "resque_pool_<%= @name %>"
    start-stop-daemon --stop --pidfile $PIDFILE --retry=QUIT/30/INT/10/KILL/5
    RETVAL=$?
    log_end_msg $RETVAL
    ;;
  restart)
    $0 stop
    sleep ${sleep_time_during_restart}
    $0 start
    ;;
  status)
      status_of_proc -p "$PIDFILE" 'resque_pool_<%= @name %>' '<%= @name %>'
      RETVAL=$?
      ;;
  *)
    echo "Usage: $0 {start|stop|graceful-stop|quick-stop|restart|reload}"
    exit 1
    ;;
esac

exit $RETVAL
